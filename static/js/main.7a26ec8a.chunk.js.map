{"version":3,"sources":["componenets/Display.js","componenets/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["Display","props","data","undefined","name","alert","className","sys","country","Date","toLocaleTimeString","Math","floor","main","temp","weather","description","humidity","pressure","visibility","wind","speed","deg","Weather","useState","setWeather","city","setCity","setCountry","APIKEY","e","a","preventDefault","fetch","then","res","json","type","placeholder","onChange","target","value","onClick","weatherData","console","log","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRA6FeA,MA3Ff,SAAiBC,GACb,IAAQC,EAASD,EAATC,KACV,YAAiBC,IAAbD,EAAKE,MACPC,MAAM,4BACC,MAIP,sBAAKC,UAAU,iBAAf,UAEM,sBAAKA,UAAU,WAAf,UACE,uBAAMA,UAAU,YAAhB,UAEGJ,EAAKE,KAFR,MAEiBF,EAAKK,IAAIC,QAF1B,eAMA,uBAAMF,UAAU,eAAhB,oBACS,IAAIG,MAAOC,wBAGpB,+BACG,IACAC,KAAKC,MAAMV,EAAKW,KAAKC,KAAO,QAC7B,uCAGF,uBAAMR,UAAU,sBAAhB,UACG,IACAJ,EAAKa,QAAQ,GAAGC,kBAGrB,sBAAKV,UAAU,iBAAf,UACE,qBAAKA,UAAU,WAAf,SACE,kCACE,+BACE,6BACE,4CAEF,6BACE,iCAAOJ,EAAKW,KAAKI,SAAjB,aAGJ,+BACE,6BACE,4CAEF,6BACE,iCAAOf,EAAKW,KAAKK,SAAjB,eAGJ,+BACE,6BACE,8CAEF,6BACE,iCAAOhB,EAAKiB,WAAa,IAAzB,mBAMR,qBAAKb,UAAU,WAAf,SACE,kCACE,+BACE,6BACE,wCAEF,6BACE,iCAAOK,KAAKC,MAAyB,GAAlBV,EAAKkB,KAAKC,MAAc,GAA3C,iBAGJ,+BACE,6BACE,kDAEF,6BACE,iCACGnB,EAAKkB,KAAKE,IACX,oCAFF,2B,MCrBLC,MAtDd,WACA,MAA8BC,mBAAS,IAAvC,mBAAOT,EAAP,KAAgBU,EAAhB,KACC,EAAwBD,mBAAS,IAAjC,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAA8BH,mBAAS,IAAvC,mBAAOhB,EAAP,KAAgBoB,EAAhB,KAEMC,EAAS,mCALG,4CAMlB,WAA2BC,GAA3B,eAAAC,EAAA,yDACED,EAAEE,iBACW,MAATN,EAFN,gBAGIrB,MAAM,mBAHV,sCAKuB4B,MAAM,qDAAD,OAC+BP,EAD/B,YACuClB,EADvC,kBACwDqB,IAE7EK,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAAChC,GAAD,OAAUA,KATtB,OAKUA,EALV,OAUEuB,EAAW,CAAEvB,KAAMA,IAVrB,4CANkB,sBAoBlB,OACE,sBAAKI,UAAU,UAAf,UACE,sBAAMA,UAAU,QAAhB,yBACA,uBACA,iCACE,uBACE+B,KAAK,OACLC,YAAY,OACZlC,KAAK,OACLmC,SAAU,SAACT,GAAD,OAAOH,EAAQG,EAAEU,OAAOC,UALtC,qBAQE,uBACEJ,KAAK,OACLC,YAAY,UACZlC,KAAK,UACLmC,SAAU,SAACT,GAAD,OAAOF,EAAWE,EAAEU,OAAOC,UAEvC,wBAAQnC,UAAU,aAAaoC,QAAS,SAACZ,GAAD,OAtC5B,2CAsCmCa,CAAYb,IAA3D,uBAKAc,QAAQC,IAAI9B,EAAQb,WAEJC,IAAjBY,EAAQb,KACP,8BACE,cAAC,EAAD,CAASA,KAAMa,EAAQb,SAEvB,SC1CK4C,MARf,WACE,OACE,qBAAKxC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7a26ec8a.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../componenets/Display.css'\r\nfunction Display(props) {\r\n    const { data } = props;\r\n  if (data.name=== undefined) {\r\n    alert(\"please a valid city name\")\r\n    return(null)\r\n  } else{\r\n\r\n  return (\r\n    <div className=\"displayweather\">\r\n      \r\n          <div className=\"maincard\" >\r\n            <span className=\"cardtitle\">\r\n            \r\n              {data.name} , {data.sys.country}. Weather\r\n\r\n          \r\n            </span>\r\n            <span className=\"cardsubtitle\">\r\n              As of {new Date().toLocaleTimeString()}\r\n            </span>\r\n\r\n            <h1>\r\n              {\" \"}\r\n              {Math.floor(data.main.temp - 273.15)}\r\n              <sup>o</sup>\r\n            </h1>\r\n\r\n            <span className=\"weather-description\">\r\n              {\" \"}\r\n              {data.weather[0].description}\r\n            </span>\r\n          </div>\r\n          <div className=\"weatherdetails\">\r\n            <div className=\"section1\">\r\n              <table>\r\n                <tr>\r\n                  <td>\r\n                    <h4>Humidity</h4>\r\n                  </td>\r\n                  <td>\r\n                    <span>{data.main.humidity} %</span>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <h4>Pressure</h4>\r\n                  </td>\r\n                  <td>\r\n                    <span>{data.main.pressure} hPa</span>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <h4>Visibility</h4>\r\n                  </td>\r\n                  <td>\r\n                    <span>{data.visibility / 1000} Km</span>\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n\r\n            <div className=\"section2\">\r\n              <table>\r\n                <tr>\r\n                  <td>\r\n                    <h4>Wind</h4>\r\n                  </td>\r\n                  <td>\r\n                    <span>{Math.floor((data.wind.speed * 18) / 5)} km/hr</span>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <h4>Wind Direction</h4>\r\n                  </td>\r\n                  <td>\r\n                    <span>\r\n                      {data.wind.deg}\r\n                      <sup>o</sup> deg\r\n                    </span>\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n          </div>\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default Display\r\n","import React from 'react'\r\nimport {useState} from 'react'\r\nimport Display from './Display'\r\nimport '../componenets/Weather.css'\r\n function Weather() {\r\n const [weather, setWeather] = useState([]);\r\n  const [city, setCity] = useState('');\r\n  const [country, setCountry] = useState('');\r\n\r\n  const APIKEY = \"e7cdeac4b51b9d7bcb2908ed1df37098\";\r\n  async function weatherData(e) {\r\n    e.preventDefault();\r\n    if (city === \" \") {\r\n      alert(\"Enter city name\");\r\n    } else {\r\n      const data = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=${APIKEY}`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((data) => data);\r\n    setWeather({ data: data });\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className=\"weather\">\r\n      <span className=\"title\">PPP Weather</span>\r\n      <br />\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"city\"\r\n          name=\"city\"\r\n          onChange={(e) => setCity(e.target.value)}\r\n        />\r\n        &nbsp; &nbsp; &nbsp;&nbsp;\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Country\"\r\n          name=\"country\"\r\n          onChange={(e) => setCountry(e.target.value)}\r\n        />\r\n        <button className=\"getweather\" onClick={(e) => weatherData(e)}>\r\n          Submit\r\n        </button>\r\n      </form>\r\n\r\n       {console.log(weather.data)} \r\n       \r\n      {weather.data !== undefined ? (\r\n        <div>\r\n          <Display data={weather.data} />\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather\r\n","\nimport './App.css';\nimport Weather from './componenets/Weather';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Weather/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}